// Generated by Dagger (https://dagger.dev).
package com.example.celestialapp.di;

import com.example.celestialapp.data.repository.RemoteDataMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideRemoteDataMapperFactory implements Factory<RemoteDataMapper> {
  private final DataModule module;

  public DataModule_ProvideRemoteDataMapperFactory(DataModule module) {
    this.module = module;
  }

  @Override
  public RemoteDataMapper get() {
    return provideRemoteDataMapper(module);
  }

  public static DataModule_ProvideRemoteDataMapperFactory create(DataModule module) {
    return new DataModule_ProvideRemoteDataMapperFactory(module);
  }

  public static RemoteDataMapper provideRemoteDataMapper(DataModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideRemoteDataMapper());
  }
}
