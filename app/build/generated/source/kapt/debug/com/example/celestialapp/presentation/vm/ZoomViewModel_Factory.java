// Generated by Dagger (https://dagger.dev).
package com.example.celestialapp.presentation.vm;

import com.example.celestialapp.domain.usecase.GetFavouriteCelestialByIdUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ZoomViewModel_Factory implements Factory<ZoomViewModel> {
  private final Provider<GetFavouriteCelestialByIdUseCase> getFavouriteCelestialByIdUseCaseProvider;

  public ZoomViewModel_Factory(
      Provider<GetFavouriteCelestialByIdUseCase> getFavouriteCelestialByIdUseCaseProvider) {
    this.getFavouriteCelestialByIdUseCaseProvider = getFavouriteCelestialByIdUseCaseProvider;
  }

  @Override
  public ZoomViewModel get() {
    return newInstance(getFavouriteCelestialByIdUseCaseProvider.get());
  }

  public static ZoomViewModel_Factory create(
      Provider<GetFavouriteCelestialByIdUseCase> getFavouriteCelestialByIdUseCaseProvider) {
    return new ZoomViewModel_Factory(getFavouriteCelestialByIdUseCaseProvider);
  }

  public static ZoomViewModel newInstance(
      GetFavouriteCelestialByIdUseCase getFavouriteCelestialByIdUseCase) {
    return new ZoomViewModel(getFavouriteCelestialByIdUseCase);
  }
}
