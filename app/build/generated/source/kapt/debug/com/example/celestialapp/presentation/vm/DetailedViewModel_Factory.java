// Generated by Dagger (https://dagger.dev).
package com.example.celestialapp.presentation.vm;

import com.example.celestialapp.domain.usecase.AddTagCelestialUseCase;
import com.example.celestialapp.domain.usecase.DeleteCrossRefDataUseCase;
import com.example.celestialapp.domain.usecase.GetDetailedDataUseCase;
import com.example.celestialapp.domain.usecase.GetFavouriteCelestialByIdUseCase;
import com.example.celestialapp.domain.usecase.GetKeywordsByNasaIdUseCase;
import com.example.celestialapp.domain.usecase.GetTagsByNasaIdUseCase;
import com.example.celestialapp.domain.usecase.UpdateCacheUseCase;
import com.example.celestialapp.domain.usecase.UpdateTagCelestialUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DetailedViewModel_Factory implements Factory<DetailedViewModel> {
  private final Provider<GetFavouriteCelestialByIdUseCase> getFavouriteCelestialByIdUseCaseProvider;

  private final Provider<GetDetailedDataUseCase> getDetailedDataUseCaseProvider;

  private final Provider<GetTagsByNasaIdUseCase> getTagsByNasaIdUseCaseProvider;

  private final Provider<GetKeywordsByNasaIdUseCase> getKeywordsByNasaIdUseCaseProvider;

  private final Provider<UpdateTagCelestialUseCase> updateTagCelestialUseCaseProvider;

  private final Provider<AddTagCelestialUseCase> addTagCelestialUseCaseProvider;

  private final Provider<DeleteCrossRefDataUseCase> deleteCrossRefDataUseCaseProvider;

  private final Provider<UpdateCacheUseCase> updateCacheUseCaseProvider;

  public DetailedViewModel_Factory(
      Provider<GetFavouriteCelestialByIdUseCase> getFavouriteCelestialByIdUseCaseProvider,
      Provider<GetDetailedDataUseCase> getDetailedDataUseCaseProvider,
      Provider<GetTagsByNasaIdUseCase> getTagsByNasaIdUseCaseProvider,
      Provider<GetKeywordsByNasaIdUseCase> getKeywordsByNasaIdUseCaseProvider,
      Provider<UpdateTagCelestialUseCase> updateTagCelestialUseCaseProvider,
      Provider<AddTagCelestialUseCase> addTagCelestialUseCaseProvider,
      Provider<DeleteCrossRefDataUseCase> deleteCrossRefDataUseCaseProvider,
      Provider<UpdateCacheUseCase> updateCacheUseCaseProvider) {
    this.getFavouriteCelestialByIdUseCaseProvider = getFavouriteCelestialByIdUseCaseProvider;
    this.getDetailedDataUseCaseProvider = getDetailedDataUseCaseProvider;
    this.getTagsByNasaIdUseCaseProvider = getTagsByNasaIdUseCaseProvider;
    this.getKeywordsByNasaIdUseCaseProvider = getKeywordsByNasaIdUseCaseProvider;
    this.updateTagCelestialUseCaseProvider = updateTagCelestialUseCaseProvider;
    this.addTagCelestialUseCaseProvider = addTagCelestialUseCaseProvider;
    this.deleteCrossRefDataUseCaseProvider = deleteCrossRefDataUseCaseProvider;
    this.updateCacheUseCaseProvider = updateCacheUseCaseProvider;
  }

  @Override
  public DetailedViewModel get() {
    return newInstance(getFavouriteCelestialByIdUseCaseProvider.get(), getDetailedDataUseCaseProvider.get(), getTagsByNasaIdUseCaseProvider.get(), getKeywordsByNasaIdUseCaseProvider.get(), updateTagCelestialUseCaseProvider.get(), addTagCelestialUseCaseProvider.get(), deleteCrossRefDataUseCaseProvider.get(), updateCacheUseCaseProvider.get());
  }

  public static DetailedViewModel_Factory create(
      Provider<GetFavouriteCelestialByIdUseCase> getFavouriteCelestialByIdUseCaseProvider,
      Provider<GetDetailedDataUseCase> getDetailedDataUseCaseProvider,
      Provider<GetTagsByNasaIdUseCase> getTagsByNasaIdUseCaseProvider,
      Provider<GetKeywordsByNasaIdUseCase> getKeywordsByNasaIdUseCaseProvider,
      Provider<UpdateTagCelestialUseCase> updateTagCelestialUseCaseProvider,
      Provider<AddTagCelestialUseCase> addTagCelestialUseCaseProvider,
      Provider<DeleteCrossRefDataUseCase> deleteCrossRefDataUseCaseProvider,
      Provider<UpdateCacheUseCase> updateCacheUseCaseProvider) {
    return new DetailedViewModel_Factory(getFavouriteCelestialByIdUseCaseProvider, getDetailedDataUseCaseProvider, getTagsByNasaIdUseCaseProvider, getKeywordsByNasaIdUseCaseProvider, updateTagCelestialUseCaseProvider, addTagCelestialUseCaseProvider, deleteCrossRefDataUseCaseProvider, updateCacheUseCaseProvider);
  }

  public static DetailedViewModel newInstance(
      GetFavouriteCelestialByIdUseCase getFavouriteCelestialByIdUseCase,
      GetDetailedDataUseCase getDetailedDataUseCase, GetTagsByNasaIdUseCase getTagsByNasaIdUseCase,
      GetKeywordsByNasaIdUseCase getKeywordsByNasaIdUseCase,
      UpdateTagCelestialUseCase updateTagCelestialUseCase,
      AddTagCelestialUseCase addTagCelestialUseCase,
      DeleteCrossRefDataUseCase deleteCrossRefDataUseCase, UpdateCacheUseCase updateCacheUseCase) {
    return new DetailedViewModel(getFavouriteCelestialByIdUseCase, getDetailedDataUseCase, getTagsByNasaIdUseCase, getKeywordsByNasaIdUseCase, updateTagCelestialUseCase, addTagCelestialUseCase, deleteCrossRefDataUseCase, updateCacheUseCase);
  }
}
