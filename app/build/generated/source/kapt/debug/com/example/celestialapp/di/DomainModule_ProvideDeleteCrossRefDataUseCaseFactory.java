// Generated by Dagger (https://dagger.dev).
package com.example.celestialapp.di;

import com.example.celestialapp.domain.repository.LocalDataRepository;
import com.example.celestialapp.domain.usecase.DeleteCrossRefDataUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("dagger.hilt.android.scopes.ViewModelScoped")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DomainModule_ProvideDeleteCrossRefDataUseCaseFactory implements Factory<DeleteCrossRefDataUseCase> {
  private final DomainModule module;

  private final Provider<LocalDataRepository> localDataRepositoryProvider;

  public DomainModule_ProvideDeleteCrossRefDataUseCaseFactory(DomainModule module,
      Provider<LocalDataRepository> localDataRepositoryProvider) {
    this.module = module;
    this.localDataRepositoryProvider = localDataRepositoryProvider;
  }

  @Override
  public DeleteCrossRefDataUseCase get() {
    return provideDeleteCrossRefDataUseCase(module, localDataRepositoryProvider.get());
  }

  public static DomainModule_ProvideDeleteCrossRefDataUseCaseFactory create(DomainModule module,
      Provider<LocalDataRepository> localDataRepositoryProvider) {
    return new DomainModule_ProvideDeleteCrossRefDataUseCaseFactory(module, localDataRepositoryProvider);
  }

  public static DeleteCrossRefDataUseCase provideDeleteCrossRefDataUseCase(DomainModule instance,
      LocalDataRepository localDataRepository) {
    return Preconditions.checkNotNullFromProvides(instance.provideDeleteCrossRefDataUseCase(localDataRepository));
  }
}
